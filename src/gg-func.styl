@require 'gg-var'

// Columns Builder

buildCols()
  for num in (1..$total-cols)
      buildColForTwelveColsGrid(num)
      buildColForOneColGrid(num)
  setMarginTopForSiblingCols(10)

buildColForTwelveColsGrid(num)
  .gg-col-{num}
    width getPercentLength(calcColumnLength(num))

buildColForOneColGrid(num)
  buildColForOneColGridOnMobile(num)
  buildColForOneColGridOnTablet(num)

buildColForOneColGridOnMobile(num)
  +breakpoint('xs-sm')
    .gg-col-{num}
      width getPercentLength(calcColumnLength(12))
    &.gg-kom
      > .gg-col-{num}
        width getPercentLength(calcColumnLength(num))
      
buildColForOneColGridOnTablet(num)
  +breakpoint('sm')
    .gg-col-{num}
      width getPercentLength(calcColumnLength(12))
    &.gg-kot
      > .gg-col-{num}
        width getPercentLength(calcColumnLength(num))

getPercentLength()
  arguments/$base-width-container * 100%

calcColumnLength()
  $base-width-col*arguments + $base-width-gutter*(arguments - 1)

setMarginTopForSiblingCols()
  +breakpoint('xs-sm')
    [class*="gg-col"] + [class*="gg-col"]
      margin-top arguments * 1px
    .gg-kom
      > [class*="gg-col"] + [class*="gg-col"]
        margin-top 0
  +breakpoint('sm')
    .gg-kot
      > [class*="gg-col"] + [class*="gg-col"]
        margin-top 0

// Helpers

clearfix()
  zoom 1
  &:after
    content " "
    display table
    clear both

createVerticalOffsets()
  for num in (1..10)
    .gg-voff-{num}
      margin-top num * 10px
      
createHorizontalOffsets()
  for num in (1..$total-cols - 1)
    .gg-hoff-{num}
        margin-left getPercentLength(calcColumnLength(num) + $base-width-gutter * 2)
    +breakpoint('xs-sm')
      .gg-hoff-{num}
        margin-left getPercentLength($base-width-gutter)
      .gg-kom
        .gg-hoff-{num}
            margin-left getPercentLength(calcColumnLength(num) + $base-width-gutter * 2)
    +breakpoint('sm')
      .gg-kot
        .gg-hoff-{num}
            margin-left getPercentLength(calcColumnLength(num) + $base-width-gutter * 2)

buildGutter()
  gutter = $base-width-gutter/$base-width-container * 100%
  gutter * arguments

// Breakpoints

breakpoint(size)
  if(size == 'xs')
    @media screen and (max-width $screen-xs-max)
      {block}
  else if (size == 'xs-sm')
    @media screen and (max-width $screen-sm-max)
      {block}
  else if (size == 'sm')
    @media screen and (min-width $screen-xs-max) and (max-width $screen-sm-max)
      {block}
  else if (size == 'sm-md')
    @media screen and (min-width $screen-sm-min) and (max-width $screen-md-max)
      {block}
  else if (size == 'md')
    @media screen and (min-width $screen-sm-max) and (max-width $screen-md-max)
      {block}
  else if (size == 'md-lg')
    @media screen and (min-width $screen-md-max) and (max-width $screen-lg-min)
      {block}
  else if (size == 'lg')
    @media screen and (min-width $screen-lg-min)
      {block}
